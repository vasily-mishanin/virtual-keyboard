!function(){"use strict";var e,t={7140:function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,a,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.aDown=e,this.aUp=n,this.bDown=r,this.bUp=o,this.extraClass=a,this.keyCode=c}var n,r,o;return n=t,(r=[{key:"getKeyHTML",value:function(){var e=this.aDown,t=this.aUp,n=this.bDown,r=this.bUp,o=this.extraClass,a=this.keyCode;return'<div class="keyboard__key '.concat(o,'" id=').concat(a,">\n      <div class = 'langA'>\n        <span class='caseDown' data-char=").concat(e,">").concat(e,"</span>\n        <span class='caseUp' data-char=").concat(t,">").concat(t,"</span>\n      </div>\n      <div class = 'langB'>\n      <span class='caseDown' data-char=").concat(n,"> ").concat(n," </span>\n      <span class='caseUp' data-char=").concat(r,"> ").concat(r," </span>\n      </div>\n    </div>")}}])&&e(n.prototype,r),o&&e(n,o),Object.defineProperty(n,"prototype",{writable:!1}),t}(),n={firstRowChars:[["§","±","&#62;","&#60;","","Backquote"],["1","!","1","!","","Digit1"],["2","@","2","&#34;","","Digit2"],["3","#","3","№","","Digit3"],["4","$","4","%","","Digit4"],["5","%","5",":","","Digit5"],["6","^","6",",","","Digit6"],["7","&","7",".","","Digit7"],["8","*","8",";","","Digit8"],["9","(","9","(","","Digit9"],["0",")","0",")","","Digit0"],["-","_","-","_","","Minus"],["=","+","=","+","","Equal"]],secondRowChars:[["q","Q","й","Й","letter","KeyQ"],["w","W","ц","Ц","letter","KeyW"],["e","E","у","У","letter","KeyE"],["r","R","к","К","letter","KeyR"],["t","T","е","Е","letter","KeyT"],["y","Y","н","Н","letter","KeyY"],["u","U","г","Г","letter","KeyU"],["i","I","ш","Ш","letter","KeyI"],["o","O","щ","Щ","letter","KeyO"],["p","P","з","З","letter","KeyP"],["[","{","х","Х","letter","BracketLeft"],["]","}","ъ","Ъ","letter","BracketRight"]],thirdRowChars:[["a","A","ф","Ф","letter","KeyA"],["s","S","ы","Ы","letter","KeyS"],["d","D","в","В","letter","KeyD"],["f","F","а","А","letter","KeyF"],["g","G","п","П","letter","KeyG"],["h","H","р","Р","letter","KeyH"],["j","J","о","О","letter","KeyJ"],["k","K","л","Л","letter","KeyK"],["l","L","д","Д","letter","KeyL"],[";",":","ж","Ж","letter","Semicolon"],["&#39;","&#34;","э","Э","letter","Quote"],["&#92;","&#124;","ё","Ё","letter","Backslash"]],fourthRowChars:[["`","~","]","[","","IntlBackslash"],["z","Z","я","Я","letter","KeyZ"],["x","X","ч","Ч","letter","KeyX"],["c","C","с","С","letter","KeyC"],["v","V","м","М","letter","KeyV"],["b","B","и","И","letter","KeyB"],["n","N","т","Т","letter","KeyN"],["m","M","ь","Ь","letter","KeyM"],[",","&#60;","б","Б","letter","Comma"],[".","&#62;","ю","Ю","letter","Period"],["/","?","/","?","","Slash"]],fifthRowChars:[["Fn","","Fn","","function","Function"],["control","","control","","control","ControlLeft"],["option","","option","","option-left","AltLeft"],["command","","command","","command-left","MetaLeft"],["&#160;","","&#160;","","space","Space"],["command","","command","","command-right","MetaRight"],["option","","option","","option-right","AltRight"]]};function r(e,t,n){return r=o()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&a(o,n.prototype),o},r.apply(null,arguments)}function o(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function a(e,t){return a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},a(e,t)}function c(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}console.log("keys",n);var d=l((function e(o,a){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"firstRowHTML",(function(){console.log("firstRowHTML",i.keys);var e=i.keys.firstRowChars.map((function(e){return r(t,c(e))})).map((function(e){return e.getKeyHTML()})),n=new t("&#9003;","","&#9003;","","backspace","Backspace");return e.push(n.getKeyHTML()),'<div class ="keyboard__row">'.concat(e.join("\n"),"</div>")})),u(this,"secondRowHTML",(function(){var e=new t("Tab","","Tab","","tab","Tab"),n=i.keys.secondRowChars.map((function(e){return r(t,c(e))})).map((function(e){return e.getKeyHTML()}));n.unshift(e.getKeyHTML());var o=new t("Enter","","Enter","","enter","Enter");return n.push(o.getKeyHTML()),'<div class ="keyboard__row">'.concat(n.join("\n"),"</div>")})),u(this,"thirdRowHTML",(function(){var e=new t("CapsLock","","CapsLock","","capslock","CapsLock"),n=i.keys.thirdRowChars.map((function(e){return r(t,c(e))})).map((function(e){return e.getKeyHTML()}));return n.unshift(e.getKeyHTML()),'<div class ="keyboard__row">'.concat(n.join("\n"),"</div>")})),u(this,"fourthRowHTML",(function(){var e=new t("Shift","","Shift","","shift-left","ShiftLeft"),n=new t("Shift","","Shift","","shift-right","ShiftRight"),o=i.keys.fourthRowChars.map((function(e){return r(t,c(e))})).map((function(e){return e.getKeyHTML()}));return o.unshift(e.getKeyHTML()),o.push(n.getKeyHTML()),'<div class ="keyboard__row">'.concat(o.join("\n"),"</div>")})),u(this,"fifthRowHTML",(function(){var e=i.keys.fifthRowChars.map((function(e){return r(t,c(e))})).map((function(e){return e.getKeyHTML()}));return'<div class ="keyboard__row bottom-row">'.concat(e.join("\n")," \n ").concat('<div class="arrows">\n      <span class="arrows__left arrow-key" id="ArrowLeft" data-char="&#9664;">&#9664;</span>\n      <div class="arrows__center">\n          <span class="arrows__up arrow-key" id="ArrowUp" data-char="&#9650;">&#9650;</span>\n          <span class="arrows__down arrow-key" id="ArrowDown" data-char="&#9660;">&#9660;</span>\n      </div>\n      <span class="arrows__right arrow-key" id="ArrowRight" data-char="&#9654;"> &#9654;</span>\n      </div>',"</div>")})),u(this,"initRender",(function(e){console.log("currentLang",i.currentLang),console.log("container",e);var t=document.createElement("div");(t.classList.add("keyboard"),e.append(t),console.log("keyboardContainer",t),console.log("this",i.firstRowHTML),t.innerHTML+=i.firstRowHTML(),t.innerHTML+=i.secondRowHTML(),t.innerHTML+=i.thirdRowHTML(),t.innerHTML+=i.fourthRowHTML(),t.innerHTML+=i.fifthRowHTML(),"EN"===i.currentLang)?(t.querySelectorAll(".langB").forEach((function(e){return e.classList.add("hidden")})),t.querySelectorAll(".letter").forEach((function(e){e.querySelector(".caseUp").classList.add("hidden")}))):(t.querySelectorAll(".langA").forEach((function(e){return e.classList.add("hidden")})),t.querySelectorAll(".letter").forEach((function(e){e.querySelector(".caseUp").classList.add("hidden")})))})),u(this,"changeLanguage",(function(e){console.log("this.currentLang =>",i.currentLang),"EN"===i.currentLang?(e.querySelectorAll(".langA").forEach((function(e){return e.classList.add("hidden")})),e.querySelectorAll(".langB").forEach((function(e){return e.classList.remove("hidden")})),window.localStorage.setItem("lang","RU"),i.currentLang="RU"):"RU"===i.currentLang&&(e.querySelectorAll(".langB").forEach((function(e){return e.classList.add("hidden")})),e.querySelectorAll(".langA").forEach((function(e){return e.classList.remove("hidden")})),window.localStorage.setItem("lang","EN"),i.currentLang="EN")})),u(this,"toLowerCaseLetters",(function(e){e.querySelectorAll(".letter").forEach((function(e){e.querySelectorAll(".caseUp").forEach((function(e){e.classList.add("hidden")})),e.querySelectorAll(".caseDown").forEach((function(e){e.classList.remove("hidden")}))}))})),u(this,"toUppersCaseLetters",(function(e){e.querySelectorAll(".letter").forEach((function(e){e.querySelectorAll(".caseDown").forEach((function(e){e.classList.add("hidden")})),e.querySelectorAll(".caseUp").forEach((function(e){e.classList.remove("hidden")}))}))})),u(this,"listenKeyboard",(function(){var e=document.querySelector(".keyboard");console.log(e),document.addEventListener("keydown",(function(e){if(i.map[e.code]=!0,"Tab"===e.code){e.preventDefault();var t=document.querySelector(".textarea"),n=t.selectionStart,r=t.selectionEnd;t.value=t.value.substring(0,n)+"\t"+t.value.substring(r),t.selectionStart=t.selectionEnd=n+1}e.getModifierState("CapsLock")&&i.toUppersCaseLetters(document.querySelector(".keyboard")),e.getModifierState("Shift")&&i.toUppersCaseLetters(document.querySelector(".keyboard")),i.map.ControlLeft&&i.map.Space&&(i.changeLanguage(document.querySelector(".keyboard")),document.getElementById(e.code).classList.remove("active")),document.getElementById(e.code).classList.add("active")})),document.addEventListener("keyup",(function(e){i.map[e.code]=!1,e.getModifierState("CapsLock")||i.toLowerCaseLetters(document.querySelector(".keyboard")),e.getModifierState("CapsLock")||i.toLowerCaseLetters(document.querySelector(".keyboard")),document.getElementById(e.code).classList.remove("active")})),e.addEventListener("mousedown",(function(e){console.log("mousedown");var t=e.target.dataset.char,n=e.target.closest(".keyboard__key")||e.target.closest(".arrow-key");t||(t=n.querySelector("span").dataset.char,console.log(t));var r=document.querySelector(".textarea"),o=r.selectionStart,a=r.selectionEnd,c=function(e){r.value=r.value.substring(0,o)+e+r.value.substring(a),r.selectionStart=r.selectionEnd=o+1};n.classList.add("active"),"Space"===n.id?c(" "):"Tab"===n.id?c("\t"):"Enter"===n.id?c("\n"):c(t||"")})),e.addEventListener("mouseup",(function(e){(e.target.closest(".keyboard__key")||e.target.closest(".arrow-key")).classList.remove("active")}))})),this.langA=o,this.langB=a,this.currentLang=window.localStorage.getItem("lang")||this.langA,this.lowerCase=!0,this.map={},this.keys=n})),f=new d("EN","RU"),h=document.createElement("div"),y=document.createElement("img"),p=document.createElement("h1"),g=document.createElement("textarea");g.setAttribute("autofocus",""),h.classList.add("root"),y.src="./favicon.ico",y.style.width="80px",g.classList.add("textarea"),p.classList.add("heading"),p.textContent="Virtual Keyboard",document.body.appendChild(h),h.appendChild(y),h.appendChild(p),h.appendChild(g),f.initRender(h),f.listenKeyboard();var v=document.createElement("footer");v.classList.add("footer"),v.innerHTML="<p>Эта клавиатура сделана на MacOS</p> <p>Для переключения языка комбинация: левая control +  Space</p>",h.appendChild(v)}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return t[e](a,a.exports,r),a.exports}r.m=t,e=[],r.O=function(t,n,o,a){if(!n){var c=1/0;for(u=0;u<e.length;u++){n=e[u][0],o=e[u][1],a=e[u][2];for(var i=!0,s=0;s<n.length;s++)(!1&a||c>=a)&&Object.keys(r.O).every((function(e){return r.O[e](n[s])}))?n.splice(s--,1):(i=!1,a<c&&(c=a));if(i){e.splice(u--,1);var l=o();void 0!==l&&(t=l)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={179:0};r.O.j=function(t){return 0===e[t]};var t=function(t,n){var o,a,c=n[0],i=n[1],s=n[2],l=0;if(c.some((function(t){return 0!==e[t]}))){for(o in i)r.o(i,o)&&(r.m[o]=i[o]);if(s)var u=s(r)}for(t&&t(n);l<c.length;l++)a=c[l],r.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return r.O(u)},n=self.webpackChunk=self.webpackChunk||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}(),r.O(void 0,[202],(function(){return r(1202)}));var o=r.O(void 0,[202],(function(){return r(7140)}));o=r.O(o)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,